ACPID
________________________________________________________________________________

Acpid is a daemon that executes certain actions whenever ACPI events are
recieved. Depending on your hardware and kernel configuration, these events
include closing a laptop lid, connecting to an AC power adapter, pressing
certain buttons and more.


Index
________________________________________________________________________________

- Usage                                                                    [0.0]
- Kernel Setup                                                             [1.0]
- Busybox acpid                                                            [2.0]

- acpid2                                                                   [3.0]
    - Finding Events                                                       [3.1]
    - Handling Events                                                      [3.2]


[0.0] Usage
________________________________________________________________________________

KISS Linux offers two options for acpid management: busybox acpid, which is
installed by default, and acpid2 [1], which can be installed from the acpid
package. For both acpid implimentations, you will need to enable a few
ACPI-related kernel options and optionally the runit service to manage it.

To enable the acpid runit service run:

+------------------------------------------------------------------------------+
|                                                                              |
|   $ ln -s /etc/sv/acpid/ /var/service/                                       |
|   $ sv up acpid                                                              |
|                                                                              |
+------------------------------------------------------------------------------+

Whenever changes are made, restart acpid for them to take effect.

+------------------------------------------------------------------------------+
|                                                                              |
|   $ sv restart acpid                                                         |
|                                                                              |
+------------------------------------------------------------------------------+


[1.0] Kernel Setup
________________________________________________________________________________

ACPI-related kernel drivers must be enabled for acpid to function properly. In
menuconfig, these options are found under Power management and ACPI options
> Power Management support > ACPI support. Most of the drivers are
self-explanatory, but the following notable options can be disabled:

+------------------------------------------------------------------------------+
|                                                                              |
|   CONFIG_ACPI_PROCFS_POWER    This option is deprecated                      |
|   CONFIG_ACPI_EC_DEBUGFS      Potentially interferes with reboot             |
|   CONFIG_ACPI_TABLE_UPGRADE   KISS does not use an initrd by default         |
|   CONFIG_ACPI_DEBUG           Adds 50k to kernel size                        |
|   CONFIG_ACPI_PCI_SLOT        Usually unnecessary                            |
|   CONFIG_ACPI_CUSTOM_METHOD   Potential security flaw                        |
|                                                                              |
+------------------------------------------------------------------------------+


[2.0] Busybox acpid
________________________________________________________________________________

When events are recieved, acpid checks /etc/acpi.map for a matching event and
/etc/acpid.conf for a corresponding handler script in /etc/acpi/. For example,
use following lines to suspend a laptop whenever the lid is closed:

+------------------------------------------------------------------------------+
| /etc/acpi.map                                                                |
+------------------------------------------------------------------------------+
|                                                                              |
|   EV_SW 0x05 SW_LID 0x00 1 button/lid LID0 00000080                          |
|                                                                              |
+------------------------------------------------------------------------------+
| /etc/acpid.conf                                                              |
+------------------------------------------------------------------------------+
|                                                                              |
|   LID0 LID/00000080                                                          |
|                                                                              |
+------------------------------------------------------------------------------+
| /etc/acpi/LID/00000080                                                       |
+------------------------------------------------------------------------------+
|                                                                              |
|   #!/bin/sh                                                                  |
|                                                                              |
|   printf mem > /sys/power/state                                              |
|                                                                              |
+------------------------------------------------------------------------------+

Each line in /etc/acpi.map has six space delimited fields:
    1. Type name (EV_SW),
    2. Type numerical value (0x05)
    3. Keycode name (SW_LID)
    4. Keycode numerical value (0x00)
    5. Value (1)
    6. Description (button/lid LID0 00000080)

The event value should usually be 1 and the event types and keycodes are listed
in /usr/include/linux/input-event-codes.h. For example, a keyboard WLAN button
event would use EV_KEY 0x05 and KEY_WLAN 238.

Each line in /etc/acpid.conf has a key (LID0) and an action (LID/00000080). The
key is any unique substring of the event description in /etc/acpi.map and the
action is the relative path to an executable script in /etc/acpi/.

To check if a configured event is received, check /var/log/acpid.log for output
lines that list the path to your handler scripts.


[3.0] acpid2
________________________________________________________________________________

acpid2 provides the similar configurable event management to Busybox, but avoids
the somewhat tedious process of mapping events. The package also provides the
acpi_listen script which prints all events as they are recieved. When events are
received, acpid2 checks files in /etc/acpi/event/ for a matching event and a
corresponding handler script.

First, install the acpid package:

+------------------------------------------------------------------------------+
|                                                                              |
|   kiss b acpid && kiss i acpid                                               |
|                                                                              |
+------------------------------------------------------------------------------+

    [3.1] Finding Events
    ____________________________________________________________________________

    Run acpi_listen to find events as they occur. For example, pressing the
    volume mute button will print something like this:

    +--------------------------------------------------------------------------+
    |                                                                          |
    |   button/mute MUTE 00000080 00000000 K                                   |
    |                                                                          |
    +--------------------------------------------------------------------------+

    NOTE: Some 'Fn + *' keys might not appear as they are hardware-bound (e.g.
          WLAN toggle). Just test them all and see what works. For most laptops,
          this will also detect lid events (e.g. opening or closing).


    [3.2] Handling Events
    ____________________________________________________________________________

    If the lines below are added to /etc/acpi/event/anything, then
    /etc/acpi/handler.sh will be executed when any event is recieved:

    +--------------------------------------------------------------------------+
    |                                                                          |
    |   event=.*                                                               |
    |   action=/etc/acpi/handler.sh %e                                         |
    |                                                                          |
    +--------------------------------------------------------------------------+

    Although different files can be placed in /etc/acpi/events/ to handle events
    with different scripts like busybox acpid, but it is often easiest to use a
    single script.

    In the example above, '%e' causes acpid to pass the details of the event as
    parameters to /etc/acpi/handler.sh. A mute button event will be passed like
    this:

    +--------------------------------------------------------------------------+
    |                                                                          |
    |   button/mute MUTE 00000080 00000000 K                                   |
    |   $1=button/mute                                                         |
    |   $2=MUTE                                                                |
    |   $3=00000080                                                            |
    |   $4=00000000                                                            |
    |   $5=K                                                                   |
    |                                                                          |
    +--------------------------------------------------------------------------+

    The basic /etc/acpi/handler.sh shown below will mute the master channel
    whenever acpid recieves the above event.

    +--------------------------------------------------------------------------+
    |                                                                          |
    |   #!/bin/sh                                                              |
    |                                                                          |
    |   case $1 in                                                             |
    |       button/mute)                                                       |
    |           amixer sset Master toggle                                      |
    |       ;;                                                                 |
    |   esac                                                                   |
    |                                                                          |
    +--------------------------------------------------------------------------+


References
________________________________________________________________________________

[0] https://sourceforge.net/projects/acpid2
